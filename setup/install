#!/usr/bin/env bash

# Stops further execution after any error.
set -e

SETUP_DIR=$(dirname "$(realpath "$0")")
ROOT_DIR="$(dirname "$SETUP_DIR")"
XDG_BIN_HOME="${XDG_BIN_HOME:-$HOME/.local/bin}"

source "$SETUP_DIR"/helpers.sh

# Check if ~/.local/bin is in $PATH so we can install getnf if necessary.
function prep_local_bin {
  [ ! -d "$XDG_BIN_HOME" ] && mkdir -p "$XDG_BIN_HOME"

  if [[ ! $(echo $PATH | tr ':' '\n' | grep -x "$XDG_BIN_HOME") ]]; then
    echo "$(cross) ERROR: $XDG_BIN_HOME needs to be in your \$PATH."
    exit
  fi

  echo "$(check) ~/.local/bin is in \$PATH"
}

function prep_fonts_dir {
  if [ "$(uname -s)" == 'darwin' ]; then
    readonly FONTS_DIR="$HOME"/Library/Fonts
  else
    readonly FONTS_DIR="$XDG_DATA_HOME"/fonts
  fi
}

function install_fonts {
  # Install getnf if not already installed.
  if [ ! -f "$HOME"/.local/bin/getnf ]; then
    curl -fsSL https://raw.githubusercontent.com/getnf/getnf/main/install.sh | bash
  fi

  echo "$(check) getnf is installed"

  [ ! -d "${FONTS_DIR}/DroidSansMono" ] && getnf -i DroidSansMono
  [ ! -d "${FONTS_DIR}/Hack" ] && getnf -i Hack
  [ ! -d "${FONTS_DIR}/Noto" ] && getnf -i Noto

  echo "$(check) Nerd fonts installed"
}

function prep_install_dir {
  # if [[ ! $(echo $PATH | tr ':' '\n' | grep -x "$HOME/.local/bin") ]]; then
  #   echo
  # fi

  [ ! -d "$XDG_CONFIG_HOME" ] && mkdir -p "$XDG_CONFIG_HOME"

  DVIM_CONFIG_HOME="$XDG_CONFIG_HOME"/dvim
  if [ -d "$DVIM_CONFIG_HOME" ]; then
    echo "$(check) $DVIM_CONFIG_HOME already installed!"
    exit
  fi

  ln -s "$ROOT_DIR" "$DVIM_CONFIG_HOME"
  echo "$(check) Symlinks are present in $DVIM_CONFIG_HOME"
}

###############################################################################

function main() {
  XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
  FONTS_DIR=

  prep_local_bin
  prep_fonts_dir
  prep_install_dir
  install_fonts

  if [ ! -f "$HOME"/.local/bin/dvim ]; then
    cat >>"$HOME"/.local/bin/dvim <<EOF
#!/usr/bin/env bash

XDG_CONFIG_HOME="\${XDG_CONFIG_HOME:-\$HOME/.config}"
export NVIM_APPNAME=\${NVIM_APPNAME:-"dvim"}
exec -a "\$NVIM_APPNAME" nvim -u "\$XDG_CONFIG_HOME"/dvim/init.lua "\$@"

echo 'Done.'
EOF
    chmod +x "$HOME"/.local/bin/dvim
    echo "$(check) Created ${DVIM_CONFIG_HOME/"$HOME"/\~} executable"
  fi

  echo "$(check) dvim successfully installed"
}

main "$@"
